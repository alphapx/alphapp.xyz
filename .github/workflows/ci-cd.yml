name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Configurar Docker
        uses: docker/setup-buildx-action@v2

      - name: Construir y publicar imágenes Docker
        run: |
          services=(users analytics content api-gateway)
          for service in "${services[@]}"; do
            docker build -t ${{ github.repository }}/${service}:${{ github.sha }} alphapp.xyz/${service}/
            docker push ${{ github.repository }}/${service}:${{ github.sha }}
          done

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Instalar dependencias y ejecutar pruebas
        run: |
          services=(users analytics)
          for service in "${services[@]}"; do
            pip install -r alphapp.xyz/${service}/requirements.txt
            pytest alphapp.xyz/${service}/tests/
          done

  deploy:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, staging, production]
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Configurar kubectl
        uses: azure/setup-kubectl@v3
        with:
          install-location: 'client-tools'

      - name: Autenticarse en el clúster
        run: |
          echo "${{ secrets['K8S_' + matrix.environment | upper + '_CONFIG'] }}" | base64 -d > kubeconfig-${{ matrix.environment }}.yaml
          export KUBECONFIG=$(pwd)/kubeconfig-${{ matrix.environment }}.yaml
          kubectl config current-context

      - name: Desplegar en el entorno ${{ matrix.environment }}
        run: |
          services=(users analytics api-gateway)
          for service in "${services[@]}"; do
            kubectl apply -f deployments/${{ matrix.environment }}/${service}-deployment.yaml -n ${{ matrix.environment }}
          done

      - name: Aprobar despliegue a producción
        if: matrix.environment == 'production'
        run: echo "Es necesario una aprobación manual antes de desplegar a producción."
